<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Glass Railing Configuration</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f5f5f5;
    }
    .container {
      max-width: 400px;
      margin: 0 auto;
      background: white;
      padding: 25px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    h3 {
      margin-top: 0;
      color: #333;
      border-bottom: 2px solid #0078D7;
      padding-bottom: 10px;
      margin-bottom: 20px;
    }
    .form-group {
      margin-bottom: 20px;
    }
    label {
      display: block;
      color: #555;
      font-weight: bold;
      font-size: 13px;
      margin-bottom: 8px;
    }
    select, input[type="number"] {
      width: 100%;
      padding: 8px 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 14px;
    }
    select:focus, input[type="number"]:focus {
      outline: none;
      border-color: #0078D7;
      box-shadow: 0 0 5px rgba(0, 120, 215, 0.3);
    }
    select:disabled {
      background-color: #e9e9e9;
      color: #999;
      cursor: not-allowed;
    }
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
      height: auto;
    }
    .checkbox-group {
      display: flex;
      align-items: center;
      margin-bottom: 15px;
    }
    input[type="checkbox"] {
      width: 18px;
      height: 18px;
      margin-right: 10px;
      cursor: pointer;
    }
    .checkbox-group label {
      margin-bottom: 0;
      cursor: pointer;
      user-select: none;
    }
    .dependent-field {
      margin-left: 28px;
      margin-top: 10px;
    }
    .button-container {
      margin-top: 30px;
      text-align: center;
      padding-top: 20px;
      border-top: 1px solid #ddd;
    }
    button {
      padding: 10px 25px;
      margin: 0 10px;
      border: none;
      border-radius: 4px;
      font-size: 14px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    .btn-primary {
      background-color: #0078D7;
      color: white;
    }
    .btn-primary:hover {
      background-color: #005ca0;
    }
    .btn-secondary {
      background-color: #6c757d;
      color: white;
    }
    .btn-secondary:hover {
      background-color: #545b62;
    }
    .info {
      background-color: #e3f2fd;
      border-left: 4px solid #0078D7;
      padding: 10px;
      margin-top: 20px;
      font-size: 12px;
      color: #555;
    }
    .error {
      color: red;
      font-size: 12px;
      margin-top: 5px;
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <h3>Glass Railing Configuration</h3>
    
    <div class="form-group">
      <label for="railing_type">Mounting Type:</label>
      <select id="railing_type">
        <option value="Hidden" selected>Hidden</option>
        <option value="Baserail">Baserail</option>
      </select>
    </div>

    <div class="form-group">
      <label for="railing_height">Railing Height (inches):</label>
      <input type="number" id="railing_height" value="42" min="8" max="54" step="0.25">
      <div class="error" id="height-error"></div>
    </div>

    <div class="form-group">
      <div class="checkbox-group">
        <input type="checkbox" id="include_caprail" checked>
        <label for="include_caprail">Include Caprail</label>
      </div>
      
      <div class="dependent-field" id="caprail_options">
        <label for="caprail_material">Caprail Material:</label>
        <select id="caprail_material">
          <option value="Aluminum" selected>Aluminum</option>
          <option value="Wood">Wood</option>
        </select>
      </div>
    </div>

    <div class="info">
      <strong>Glass Panel Specifications:</strong><br>
      • Thickness: 1/2"<br>
      • Maximum panel width: 48"<br>
      • Panel gap: 1"<br>
      • Typical height range: 36" - 42"<br>
      • Height is measured from floor to top of glass/caprail
    </div>

    <div class="button-container">
      <button class="btn-primary" onclick="createGlassRailing()">Create Railing</button>
      <button class="btn-secondary" onclick="cancel()">Cancel</button>
    </div>
  </div>

  <script>
    // Get elements
    const typeSelect = document.getElementById('railing_type');
    const heightInput = document.getElementById('railing_height');
    const caprailCheckbox = document.getElementById('include_caprail');
    const caprailOptions = document.getElementById('caprail_options');
    const caprailMaterialSelect = document.getElementById('caprail_material');
    const heightError = document.getElementById('height-error');

    // Toggle caprail material dropdown enabled/disabled state
    caprailCheckbox.addEventListener('change', function() {
      if (this.checked) {
        caprailMaterialSelect.disabled = false;
      } else {
        caprailMaterialSelect.disabled = true;
      }
    });

    // Validate height input
    function validateHeight() {
      const height = parseFloat(heightInput.value);
      
      // Clear previous error
      heightError.style.display = 'none';
      
      if (isNaN(height) || height < 8 || height > 54) {
        heightError.textContent = 'Height must be between 8" and 54"';
        heightError.style.display = 'block';
        return false;
      }
      
      return true;
    }

    heightInput.addEventListener('input', validateHeight);

    // Create railing function
    function createGlassRailing() {
      if (!validateHeight()) {
        return;
      }

      const values = {
        railing_type: typeSelect.value,
        railing_height: parseFloat(heightInput.value),
        include_caprail: caprailCheckbox.checked,
        caprail_material: caprailCheckbox.checked ? caprailMaterialSelect.value : null
      };

      // Send to SketchUp
      window.location = 'skp:create_glass_railing@' + JSON.stringify(values);
    }

    // Cancel function
    function cancel() {
      window.location = 'skp:cancel';
    }

    // Auto-resize dialog to fit content
    window.addEventListener('load', function() {
      setTimeout(function() {
        const bodyHeight = document.body.scrollHeight;
        const bodyWidth = document.body.scrollWidth;
        
        // Send resize request to SketchUp if needed
        window.location = 'skp:resize_dialog@' + JSON.stringify({
          width: Math.max(450, bodyWidth + 50),
          height: Math.max(450, bodyHeight + 50)
        });
      }, 100);
    });
  </script>
</body>
</html>